import{_ as t,C as o,o as l,c as p,H as c,w as e,k as s,a}from"./chunks/framework.98e11516.js";const x=JSON.parse('{"title":"mawk","titleTemplate":"x-cmd 1 分钟快速上手","description":"x-cmd 1 分钟 | mawk 快速上手 | mawk 是 AWK 编程语言的解释器","frontmatter":{"name":"mawk","titleTemplate":"x-cmd 1 分钟快速上手","head":[["meta",{"name":"og:title","content":"x-cmd 1 分钟 | mawk 快速上手"}],["meta",{"name":"og:description","content":"mawk 是 AWK 编程语言的解释器"}],["meta",{"name":"description","content":"x-cmd 1 分钟 | mawk 快速上手 | mawk 是 AWK 编程语言的解释器"}]],"items":[{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #F97583\\">&lt;</span><span style=\\"color: #E1E4E8\\"> data.txt x mawk </span><span style=\\"color: #9ECBFF\\">&#39;{ print $0 }&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #D73A49\\">&lt;</span><span style=\\"color: #24292E\\"> data.txt x mawk </span><span style=\\"color: #032F62\\">&#39;{ print $0 }&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"读取文件的数据，并输出 stdout","en":"Reads the data from the file and outputs stdout"},"desc":"读取文件的数据，并输出 stdout"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">echo</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&quot;mawk main body&quot;</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #F97583\\">|</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">mawk</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;BEGIN{print &quot;BEGIN&quot;}{print $0}END{print &quot;ENG&quot;}&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">echo</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&quot;mawk main body&quot;</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #D73A49\\">|</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">mawk</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;BEGIN{print &quot;BEGIN&quot;}{print $0}END{print &quot;ENG&quot;}&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"BEGIN、END 和 main 代码块的特性","en":"Features of BEGIN, END, and main code blocks"},"desc":"BEGIN、END 和 main 代码块的特性"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #F97583\\">&lt;</span><span style=\\"color: #E1E4E8\\"> data.txt x mawk </span><span style=\\"color: #9ECBFF\\">&#39;NR&lt;=2&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #D73A49\\">&lt;</span><span style=\\"color: #24292E\\"> data.txt x mawk </span><span style=\\"color: #032F62\\">&#39;NR&lt;=2&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"筛选出文件前两行数据内容","en":"Filter out the first two lines of data in the file"},"desc":"筛选出文件前两行数据内容"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">echo</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;hello:the:word&#39;</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #F97583\\">|</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">mawk</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;BEGIN{FS=&quot;\\\\n&quot;; RS=&quot;:&quot;} {print $1,$2,$3}&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">echo</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;hello:the:word&#39;</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #D73A49\\">|</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">mawk</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;BEGIN{FS=&quot;\\\\n&quot;; RS=&quot;:&quot;} {print $1,$2,$3}&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"使用分隔符号处理数据","en":"Work with data using delimited symbols"},"desc":"使用分隔符号处理数据"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">mawk</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">-v</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">aaa=bbb</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;BEGIN{ bbb=&quot;ccc&quot;; print aaa,bbb }&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">mawk</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">-v</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">aaa=bbb</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;BEGIN{ bbb=&quot;ccc&quot;; print aaa,bbb }&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"将变量值传递到 mawk 中输出","en":"Pass variable values into the output in Mawk"},"desc":"将变量值传递到 mawk 中输出"}],"aside":false,"outline":false,"x-term-speg":"1min/mawk.cn","x-term-name":"mawk","x-term-desc":"mawk 是 AWK 编程语言的解释器","x-term-size":"large","links":[{"type":"pkg","text":"mawk","link":"/pkg/mawk"}]},"headers":[],"relativePath":"1min/mawk.md","filePath":"1min/mawk.md"}'),r={name:"1min/mawk.md"},i=s("h1",{id:"mawk",tabindex:"-1"},[a("mawk "),s("a",{class:"header-anchor",href:"#mawk","aria-label":'Permalink to "mawk"'},"​")],-1),d=s("p",{class:"visually-hidden"}," mawk 是 AWK 编程语言的解释器 ",-1),m=s("p",null,"本教程演示了 mawk 的基本用法：",-1),E=s("ol",null,[s("li",null,"在bash终端执行 awk 代码。"),s("li",null,"echo命令输出的stdin内容通过 pipeline传递给mawk处理，并展示awk的BEGIN、END 和 main 代码块的特性。"),s("li",null,"给awk系统变量FS和RS赋值，并输出处理过后的数据； （FS是域分隔符， RS是记录分隔符）"),s("li",null,[a("通过awk的option "),s("code",null,"-v"),a(" 将变量值传递到 mawk 中,并输出到终端。")])],-1),k=s("p",null,"进一步阅读：",-1),y=s("ul",null,[s("li",null,[a("x-cmd 对于 mawk 的介绍和快速安装的方法，可以查看: "),s("a",{href:"/pkg/mawk"},"x-cmd pkg for mawk ")]),s("li",null,[s("a",{href:"https://invisible-island.net/mawk/mawk.html",target:"_blank",rel:"noreferrer"},"mawk website")]),s("li",null,[s("a",{href:"https://www.bookstack.cn/read/junmajinlong-awk/f956eee07653bf2a.md",target:"_blank",rel:"noreferrer"},"awk 入门指南 1")]),s("li",null,[s("a",{href:"https://book.saubcy.com/AwkInAction/section_1/chapter_2_2.html",target:"_blank",rel:"noreferrer"},"awk 入门指南 2")])],-1);function h(u,w,b,F,g,v){const n=o("OneMinutePage");return l(),p("div",null,[c(n,null,{default:e(()=>[i,d]),abstract:e(()=>[m,E,k,y]),_:1})])}const B=t(r,[["render",h]]);export{x as __pageData,B as default};
