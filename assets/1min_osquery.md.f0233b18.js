import{_ as l,C as o,o as p,c as t,H as c,w as a,k as s,a as e}from"./chunks/framework.98e11516.js";const _=JSON.parse(`{"title":"osquery","titleTemplate":"x-cmd 1 分钟快速上手","description":"x-cmd 1 分钟 | osquery 快速上手 | osquery 是一个 SQL 驱动的操作系统检测、监视和分析框架","frontmatter":{"name":"osquery","titleTemplate":"x-cmd 1 分钟快速上手","head":[["meta",{"name":"og:title","content":"x-cmd 1 分钟 | osquery 快速上手"}],["meta",{"name":"og:description","content":"osquery 是一个 SQL 驱动的操作系统检测、监视和分析框架"}],["meta",{"name":"description","content":"x-cmd 1 分钟 | osquery 快速上手 | osquery 是一个 SQL 驱动的操作系统检测、监视和分析框架"}]],"items":[{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">osqueryi</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">osqueryi</span></span></code></pre>\\n</div>","#desc":{"cn":"启动 osquery 的交互式 UI","en":"Start osquery's interactive UI"},"desc":"启动 osquery 的交互式 UI"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #9ECBFF\\">.tables</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">user</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #032F62\\">.tables</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">user</span></span></code></pre>\\n</div>","#desc":{"cn":"列出用户表","en":"List user tables"},"desc":"列出用户表"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #9ECBFF\\">.schema</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">users</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #032F62\\">.schema</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">users</span></span></code></pre>\\n</div>","#desc":{"cn":"显示用户表的结构","en":"Displays the structure of the user table"},"desc":"显示用户表的结构"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #9ECBFF\\">PRAGMA</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">table_info</span><span style=\\"color: #E1E4E8\\">(</span><span style=\\"color: #9ECBFF\\">users</span><span style=\\"color: #E1E4E8\\">);</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #032F62\\">PRAGMA</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">table_info</span><span style=\\"color: #24292E\\">(</span><span style=\\"color: #032F62\\">users</span><span style=\\"color: #24292E\\">);</span></span></code></pre>\\n</div>","#desc":{"cn":"以 table 格式显示用户表的结构","en":"Displays the structure of the user table in table format"},"desc":"以 table 格式显示用户表的结构"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #9ECBFF\\">SELECT</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">pid,</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">name,</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">path</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">FROM</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">processes</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">LIMIT</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">1</span><span style=\\"color: #E1E4E8\\">;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #032F62\\">SELECT</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">pid,</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">name,</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">path</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">FROM</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">processes</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">LIMIT</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">1</span><span style=\\"color: #24292E\\">;</span></span></code></pre>\\n</div>","#desc":{"cn":"获取 1 个进程的 pid、名称和路径","en":"Select 1 process's pid, name, and path"},"desc":"获取 1 个进程的 pid、名称和路径"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">echo</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&quot;SELECT * FROM users limit 5;&quot;</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #F97583\\">|</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">osqueryi</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">--csv</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">echo</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&quot;SELECT * FROM users limit 5;&quot;</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #D73A49\\">|</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">osqueryi</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">--csv</span></span></code></pre>\\n</div>","#desc":{"cn":"查询 users 表，并以 csv 格式输出结果","en":"Query the users table and output the results in CSV format"},"desc":"查询 users 表，并以 csv 格式输出结果"}],"aside":false,"outline":false,"x-term-speg":"1min/osquery.cn","x-term-name":"osquery","x-term-desc":"osquery 是一个 SQL 驱动的操作系统检测、监视和分析框架","x-term-size":"large","links":[{"type":"pkg","text":"osquery","link":"/pkg/osquery"}]},"headers":[],"relativePath":"1min/osquery.md","filePath":"1min/osquery.md"}`),r={name:"1min/osquery.md"},i=s("h1",{id:"osquery",tabindex:"-1"},[e("osquery "),s("a",{class:"header-anchor",href:"#osquery","aria-label":'Permalink to "osquery"'},"​")],-1),d=s("p",{class:"visually-hidden"}," osquery 是一个 SQL 驱动的操作系统检测、监视和分析框架 ",-1),y=s("p",null,[e("本教程演示了 "),s("code",null,"osquery"),e(" 的基本功能和用法:")],-1),u=s("ol",null,[s("li",null,"罗列所有与用户有关的表，并查看用户表的结构。"),s("li",null,[e("查看一条进程信息： "),s("ul",null,[s("li",null,[e("这里使用 SELECT 在 "),s("code",null,"processes"),e(" 表中获取进程的信息")]),s("li",null,[e("通过 "),s("code",null,".mode"),e(" 指定输出的格式，例如 "),s("code",null,".mode csv"),e(" 以 csv 格式输出数据")])])]),s("li",null,"查询 users 表，并以 csv 格式输出。")],-1),E=s("p",null,"对此有兴趣的用户，可以查看：",-1),h=s("ul",null,[s("li",null,[s("a",{href:"/pkg/osquery"},"x-cmd pkg for osquery")])],-1);function F(m,v,g,C,b,q){const n=o("OneMinutePage");return p(),t("div",null,[c(n,null,{default:a(()=>[i,d]),abstract:a(()=>[y,u,E,h]),_:1})])}const B=l(r,[["render",F]]);export{_ as __pageData,B as default};
