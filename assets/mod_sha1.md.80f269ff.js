import{_ as t,C as o,o as p,c,H as n,w as r,k as s,a,Y as h}from"./chunks/framework.98e11516.js";const P=JSON.parse('{"title":"x sha1|sha256|sha512","description":"x sha1 | x-cmd module | 计算文件的 SHA1 散列值","frontmatter":{"head":[["meta",{"name":"og:title","content":"x sha1 | x-cmd"}],["meta",{"name":"og:description","content":"计算文件的 SHA1 散列值"}],["meta",{"name":"description","content":"x sha1 | x-cmd module | 计算文件的 SHA1 散列值"}]]},"headers":[],"relativePath":"mod/sha1.md","filePath":"mod/sha1.md"}'),d={name:"mod/sha1.md"},i=s("h1",{id:"x-sha1-sha256-sha512",tabindex:"-1"},[a("x sha1|sha256|sha512 "),s("a",{class:"header-anchor",href:"#x-sha1-sha256-sha512","aria-label":'Permalink to "x sha1|sha256|sha512"'},"​")],-1),y=s("p",{class:"x-desc"},"计算文件的 SHA1 散列值",-1),E=s("p",null,"根据当前平台已有的可执行文件，自动选用 shasum 或者 sha1sum，计算文件的 SHA1.",-1),F=s("p",null,"如果传入参数，这些参数会被视为文件路径。此时输出统一为：按照参数的传入顺序，一行对应一个文件散列值，以换行符为结尾。",-1),u=s("p",null,[a("如果不传入参数，则会从 "),s("code",null,"stdin"),a(" 读入内容，将计算其 SHA1 散列值输出。")],-1),_=s("p",null,"如果你需要计算 sha256 或者 sha3 或者 sha512，只需要本文命令中的 sha1 改为 sha256，或者 sha3，或者 sha512，即可。",-1),C=s("p",null,"另外， sha256 可以简写为 sha2， sha512可以简写为 sha5",-1),m=h('<h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sha1</span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;">sha256</span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;">sha512</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">#</span><span style="color:#E1E4E8;">n</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sha1</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">sha256</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">sha512</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">#</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><div class="table-wrap"><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>#n</code></td><td></td></tr></tbody></table></div><h2 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-label="Permalink to &quot;例子&quot;">​</a></h2><p>计算当前文件夹下文件名为 a 开头且后缀名为 <code>.txt</code> 的所有文件（假设这类文件数目不多，且都为正常文件，数目不会超过命令能接受的参数个数限制）</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sha1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#79B8FF;">*</span><span style="color:#9ECBFF;">.txt</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sha1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#005CC5;">*</span><span style="color:#032F62;">.txt</span></span></code></pre></div><p>计算当前目录下所有文件（不包括文件夹，以及设备文件等特殊文件）的 SHA1</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">fsiter</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--file</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">args</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;x sha1 $@&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">fsiter</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--file</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">args</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;x sha1 $@&#39;</span></span></code></pre></div><p>从stdin读入多个文件路径，并分别计算这些文件的 SHA1</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">args</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;x sha1 $@&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">args</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;x sha1 $@&#39;</span></span></code></pre></div><br>',12),x=s("h2",{id:"相关链接",tabindex:"-1"},[a("相关链接 "),s("a",{class:"header-anchor",href:"#相关链接","aria-label":'Permalink to "相关链接"'},"​")],-1),b=s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},"TIP"),s("p",null,[a("在交互式终端中（如 zsh, bash ...），可以使用 "),s("kbd",null,"Tab"),a(" 获取补全信息")]),s("p",null,[a("运行 "),s("code",null,"CMD SUBCOMMAND --help"),a(" 可以获取命令的更多信息")])],-1);function g(v,k,B,A,f,S){const l=o("AdsContent"),e=o("DocsLinkCard");return p(),c("div",null,[i,y,E,F,u,_,C,n(l),m,n(e,null,{default:r(()=>[x]),_:1}),b])}const H=t(d,[["render",g]]);export{P as __pageData,H as default};
