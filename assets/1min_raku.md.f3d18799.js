import{_ as n,C as o,o as p,c as t,H as c,w as e,k as s,a}from"./chunks/framework.98e11516.js";const f=JSON.parse('{"title":"raku","titleTemplate":"x-cmd 1 分钟快速上手","description":"x-cmd 1 分钟 | raku 快速上手 | 一种通用的、渐进式类型的编程语言，支持多重编程范式","frontmatter":{"name":"raku","titleTemplate":"x-cmd 1 分钟快速上手","head":[["meta",{"name":"og:title","content":"x-cmd 1 分钟 | raku 快速上手"}],["meta",{"name":"og:description","content":"一种通用的、渐进式类型的编程语言，支持多重编程范式"}],["meta",{"name":"description","content":"x-cmd 1 分钟 | raku 快速上手 | 一种通用的、渐进式类型的编程语言，支持多重编程范式"}]],"items":[{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">raku</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">hello.raku</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">raku</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">hello.raku</span></span></code></pre>\\n</div>","#desc":{"cn":"执行 raku 代码文件","en":"Executing raku code files"},"desc":"执行 raku 代码文件"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">raku</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">-e</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;my @a = (1, 2, 3); for @a -&gt; $i { say $i }&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">raku</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">-e</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;my @a = (1, 2, 3); for @a -&gt; $i { say $i }&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"执行简单的 raku 代码","en":"Execute simple raku code"},"desc":"执行简单的 raku 代码"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">raku</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">args.raku</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">x-cmd</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">raku</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">args.raku</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">x-cmd</span></span></code></pre>\\n</div>","#desc":{"cn":"获取命令行参数","en":"Get command line parameters"},"desc":"获取命令行参数"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">raku</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">word.raku</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">example.txt</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">raku</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">word.raku</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">example.txt</span></span></code></pre>\\n</div>","#desc":{"cn":"处理文本，如统计文件中每个单词出现的次数","en":"Process text, such as counting the number of occurrences of each word in the file"},"desc":"处理文本，如统计文件中每个单词出现的次数"}],"aside":false,"outline":false,"x-term-speg":"1min/raku.cn","x-term-name":"raku","x-term-desc":"一种通用的、渐进式类型的编程语言，支持多重编程范式","x-term-size":"large","links":[{"type":"pkg","text":"raku","link":"/pkg/raku"}]},"headers":[],"relativePath":"1min/raku.md","filePath":"1min/raku.md"}'),r={name:"1min/raku.md"},i=s("h1",{id:"raku",tabindex:"-1"},[a("raku "),s("a",{class:"header-anchor",href:"#raku","aria-label":'Permalink to "raku"'},"​")],-1),d=s("p",{class:"visually-hidden"}," 一种通用的、渐进式类型的编程语言，支持多重编程范式 ",-1),u=s("p",null,"本教程演示了 raku 的基本用法：",-1),k=s("ol",null,[s("li",null,"在bash终端执行 raku 代码文件"),s("li",null,[a("执行简单的 raku 代码： "),s("ul",null,[s("li",null,[s("code",null,"x raku -e"),a("：这部分表示在命令行中执行 Raku 脚本，引号包起来的是脚本代码。")]),s("li",null,[s("code",null,"my @a = (1, 2, 3);"),a("：创建一个名为 @a 的数组，其中包含数字 1、2 和 3。")]),s("li",null,[s("code",null,"for @a -> $i { say $i }"),a("：使用 for 循环遍历数组 @a，并将每个元素赋值给变量 $i，然后使用 say 函数打印出元素的值。")])])]),s("li",null,"获取命令行参数并传递给脚本。"),s("li",null,"执行word.raku脚本，这个脚本的作用是统计example.txt中每个单词出现的次数。")],-1),y=s("p",null,"进一步阅读：",-1),h=s("ul",null,[s("li",null,[a("x-cmd 对于 Raku 的介绍和快速安装的方法，可以查看: "),s("a",{href:"/pkg/raku"},"x-cmd pkg for raku ")]),s("li",null,[a("x-cmd 对于 Raku 在 cli 上所作的优化，具体可以查看: "),s("a",{href:"/mod/raku"}," module for raku ")])],-1);function m(E,g,F,x,v,C){const l=o("OneMinutePage");return p(),t("div",null,[c(l,null,{default:e(()=>[i,d]),abstract:e(()=>[u,k,y,h]),_:1})])}const b=n(r,[["render",m]]);export{f as __pageData,b as default};
