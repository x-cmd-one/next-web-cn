import{_ as o,C as t,o as r,c as s,H as i,w as n,k as e,a as l}from"./chunks/framework.98e11516.js";const B=JSON.parse('{"title":"node","titleTemplate":"x-cmd package | 一个异步事件驱动的 JavaScript 运行时","description":"x-cmd package node | 一个异步事件驱动的 JavaScript 运行时","frontmatter":{"name":"node","titleTemplate":"x-cmd package | 一个异步事件驱动的 JavaScript 运行时","head":[["meta",{"name":"og:title","content":"node | x-cmd package"}],["meta",{"name":"og:description","content":"一个异步事件驱动的 JavaScript 运行时"}],["meta",{"name":"description","content":"x-cmd package node | 一个异步事件驱动的 JavaScript 运行时"}]],"links":[{"type":"1min","text":"node","link":"/1min/node"},{"type":"mod","text":"`x env` => 文档","link":"/mod/env"}],"homepage":"https://nodejs.org","license":"MIT","version":{"stable":"v18.4.0"},"support":["linux/x64","linux/arm64","darwin/x64","darwin/arm64","win/x64"],"source":{"official":["https://nodejs.org/dist"],"repack-thirdparty":["https://registry.npmmirror.com/-/binary/node"]},"aside":false,"outline":false,"x-term-speg":"pkg/node.cn","x-term-name":"node","x-term-desc":"一个异步事件驱动的 JavaScript 运行时","x-term-size":"large"},"headers":[],"relativePath":"pkg/node.md","filePath":"pkg/node.md"}'),d={name:"pkg/node.md"},c=e("h1",{id:"node",tabindex:"-1"},[l("node "),e("a",{class:"header-anchor",href:"#node","aria-label":'Permalink to "node"'},"​")],-1),p=e("p",{class:"x-desc"},"一个异步事件驱动的 JavaScript 运行时",-1),h=e("h2",{id:"介绍",tabindex:"-1"},[l("介绍 "),e("a",{class:"header-anchor",href:"#介绍","aria-label":'Permalink to "介绍"'},"​")],-1),u=e("p",null,"Node.js 是一个开源、跨平台、异步事件驱动，基于 V8 引擎的 JavaScript 运行时环境，于 2009 年由 Ryan Dahl 创造，目的是为了实现高性能的网络应用开发。",-1),m=e("ol",null,[e("li",null,[e("strong",null,"性能表现良好"),l("：使用事件驱动和非阻塞 I/O 模型，能够处理大量的并发请求；使用单线程模型，避免了多线程编程的复杂性和开销。")]),e("li",null,[e("strong",null,"应用范围"),l("：适用于开发实时通信，数据流处理，微服务架构等类型的应用。")]),e("li",null,[e("strong",null,"资源丰富"),l("：拥有一个庞大的生态系统和丰富的库，可根据需要使用 npm (Node Package Manager) 等包管理工具让不同库来增强应用程序的整体功能。")])],-1),g=e("h2",{id:"首次用户",tabindex:"-1"},[l("首次用户 "),e("a",{class:"header-anchor",href:"#首次用户","aria-label":'Permalink to "首次用户"'},"​")],-1),_=e("ol",null,[e("li",null,[l("本页面的demo提供了一个使用 js 输出 "),e("code",null,"hello world"),l(" 的实例。")]),e("li",null,[l("x-cmd 提供了 "),e("a",{href:"/1min/node"},"1min"),l(" 教程，里面展示了如何在 node 如何使用 IO，文件，网络，进程等基础功能。")])],-1),k=e("h2",{id:"技术特点",tabindex:"-1"},[l("技术特点 "),e("a",{class:"header-anchor",href:"#技术特点","aria-label":'Permalink to "技术特点"'},"​")],-1),b=e("ol",null,[e("li",null,[l("事件驱动和非阻塞 I/O，是Node.JS最为显著的特点 "),e("ol",null,[e("li",null,"通过事件循环机制，Node.js 能够在单个线程中处理多个并发操作，避免了阻塞，使得高并发应用的性能得到提升。"),e("li",null,[l("Node.js 采用著名的 "),e("a",{href:"https://github.com/libuv/libuv",target:"_blank",rel:"noreferrer"},"libuv"),l(" 作为异步IO的底层实现")]),e("li",null,"异步回调型写法给流程式开发带来一定的困扰，JS则逐渐在其语言标准引入了 Promise 和 Async/Await，以改进开发体验。")])]),e("li",null,[l("易于迁移的运行时： "),e("ol",null,[e("li",null,"Node.js 本身是一个轻量级的运行时环境，它专注于执行 JavaScript 代码，并提供了一些基本的 API，使得开发者能够构建高效的网络应用。"),e("li",null,"相比大部分的语言Runtime，NodeJS只依赖系统的std c库，除此之外不作任何依赖要求。该特性使其运行时安装异常简单。")])]),e("li",null,[l("快速启动和响应： "),e("ol",null,[e("li",null,"Node.js 使用浏览器所使用的 V8 引擎来执行 JavaScript 代码，继承了在启动速度和响应时间的优势。这对于调试和部署应用时非常快捷便利。"),e("li",null,"在早期的Node.js 版本，Node.js的启动时间逊于 Python 这类老牌语言。如果需要加载较多的第三方库，启动时间会进一步增加。但自从v10版本开始，Node.js在启动时间和加载都有较大的改进，达到正常水平。")])]),e("li",null,[l("庞大的生态和第三方库 "),e("ol",null,[e("li",null,"由于 Node.js 的开放性、npm社区的努力以及社区的活力，Node.js 现在拥有体量庞大的生态"),e("li",null,"Node.js 的大部分库都比较小型，因此容易造成碎片化，从而增加了第三方库的安装时间，以及运行时的首启加载时间。"),e("li",null,[l("关于第三方库的安装加速，存在很多针对 npm-cli 的第三方的优化方案，例如最早的 "),e("a",{href:"https://yarnpkg.com/",target:"_blank",rel:"noreferrer"},"yarn"),l("，后面的 "),e("a",{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},"pnpm"),l("。最近的 bun 也提出了兼容 node 的 "),e("a",{href:"https://bun.sh/docs/cli/install",target:"_blank",rel:"noreferrer"},"包安装工具"),l("，并给出了最高 25 倍的提速。其在最近发布正式版，让我们拭目以待。")]),e("li",null,"关于首启加载时间的优化方法有很多，例如用 webpack ，将所有的库与项目代码打包到单文件。而在最近的 Node.js 版本，在加载速度也有很大的提升。")])])],-1),x=e("h2",{id:"竞品",tabindex:"-1"},[l("竞品 "),e("a",{class:"header-anchor",href:"#竞品","aria-label":'Permalink to "竞品"'},"​")],-1),f=e("ol",null,[e("li",null,[l("deno 是一个由 Node 原作者采用 Rust 开发，源于对 Node.js 中某些设计决策的重新思考和改进。x-cmd 也引入了 deno，有兴趣的读者可以参考 "),e("a",{href:"/pkg/deno"},"x-cmd pkg deno"),l("。")]),e("li",null,[l("bun 由 Jarred Sumner 在 2021年使用 Zig 开发。但不同于 node 和 deno 基于 Chrome 项目的 "),e("a",{href:"https://v8.dev/",target:"_blank",rel:"noreferrer"},"V8引擎"),l("，bun 使用 "),e("a",{href:"https://trac.webkit.org/wiki/JavaScriptCore",target:"_blank",rel:"noreferrer"},"JavaScriptCore 引擎"),l("。x-cmd 也引入了 bun，有兴趣的读者可以参考 "),e("a",{href:"/pkg/bun"},"x-cmd pkg bun"),l("。")])],-1),v=e("h2",{id:"进一步阅读",tabindex:"-1"},[l("进一步阅读 "),e("a",{class:"header-anchor",href:"#进一步阅读","aria-label":'Permalink to "进一步阅读"'},"​")],-1),y=e("ul",null,[e("li",null,[l("关于 x-cmd 对于 node 在命令行使用中进行的增强扩展，具体可以查看: "),e("a",{href:"/mod/node"},"module for node")])],-1),N=e("div",{class:"language-sh vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sh"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#79B8FF"}},"x"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"env"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"use"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"node")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#005CC5"}},"x"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"env"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"use"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"node")])])])],-1);function J(S,j,E,P,C,F){const a=t("PackagePage");return r(),s("div",null,[i(a,null,{default:n(()=>[c,p]),abstract:n(()=>[h,u,m,g,_,k,b,x,f,v,y]),install:n(()=>[N]),_:1})])}const I=o(d,[["render",J]]);export{B as __pageData,I as default};
