import{_ as s,C as n,o,c as r,H as c,w as l,k as e,a}from"./chunks/framework.98e11516.js";const A=JSON.parse('{"title":"jq","titleTemplate":"x-cmd package | jq 是一个轻量级且灵活的命令行 JSON 处理器","description":"x-cmd package jq | jq 是一个轻量级且灵活的命令行 JSON 处理器","frontmatter":{"name":"jq","titleTemplate":"x-cmd package | jq 是一个轻量级且灵活的命令行 JSON 处理器","head":[["meta",{"name":"og:title","content":"jq | x-cmd package"}],["meta",{"name":"og:description","content":"jq 是一个轻量级且灵活的命令行 JSON 处理器"}],["meta",{"name":"description","content":"x-cmd package jq | jq 是一个轻量级且灵活的命令行 JSON 处理器"}]],"links":[{"type":"1min","text":"jq","link":"/1min/jq"},{"type":"mod","text":"`x env` => 文档","link":"/mod/env"}],"homepage":"https://github.com/jqlang/jq","license":"MIT","version":{"stable":"v0.0.1"},"support":["linux/arm64","darwin/arm64","linux/x64","darwin/x64","win/x64"],"source":{"x-cmd":["https://github.com/x-cmd-build/jq/releases","https://gitcode.net/x-cmd-build/jq/-/releases"]},"aside":false,"outline":false,"x-term-speg":"pkg/jq.cn","x-term-name":"jq","x-term-desc":"jq 是一个轻量级且灵活的命令行 JSON 处理器","x-term-size":"large"},"headers":[],"relativePath":"pkg/jq.md","filePath":"pkg/jq.md"}'),i={name:"pkg/jq.md"},d=e("h1",{id:"jq",tabindex:"-1"},[a("jq "),e("a",{class:"header-anchor",href:"#jq","aria-label":'Permalink to "jq"'},"​")],-1),h=e("p",{class:"x-desc"},"jq 是一个轻量级且灵活的命令行 JSON 处理器",-1),p=e("h2",{id:"简介",tabindex:"-1"},[a("简介 "),e("a",{class:"header-anchor",href:"#简介","aria-label":'Permalink to "简介"'},"​")],-1),j=e("p",null,"jq 是一个轻量级的基于命令行的 JSON 处理工具，由 Stephen Dolan 于 2012 年开发的。目前，jq 最新稳定版本是 1.7，发布于2023年。",-1),q=e("p",null,"jq 使用简洁的语法和强大的功能，可以灵活高效地完成从 JSON 数据中提取特定字段、过滤和排序数据、执行复杂的转换和计算等一系列任务。",-1),m=e("ol",null,[e("li",null,"C 开发带来的效率：jq 使用 C 语言开发的，并加入了不少优化，在处理大型 JSON 数据时非常高效。"),e("li",null,"别具一格的流式语言使其用法灵活，内置不少实用函数和运算符，可以进行字符串、数值和日期等数据类型的处理，也能胜任 JSON，CSV，TSV 的转换工作。"),e("li",null,[a("丰富的官方文档：jq 官方提供了丰富的"),e("a",{href:"https://jqlang.github.io/jq/manual/",target:"_blank",rel:"noreferrer"},"文档"),a("、"),e("a",{href:"https://jqlang.github.io/jq/tutorial/",target:"_blank",rel:"noreferrer"},"教程"),a("和示例。")])],-1),_=e("h2",{id:"首次用户快速实验指南",tabindex:"-1"},[a("首次用户快速实验指南 "),e("a",{class:"header-anchor",href:"#首次用户快速实验指南","aria-label":'Permalink to "首次用户快速实验指南"'},"​")],-1),u=e("p",null,"对于首次使用 jq 的用户，可以先参考下面的链接，花1-2分钟快速体验 jq。",-1),g=e("ul",null,[e("li",null,[a("x-cmd 提供了 "),e("a",{href:"/1min/jq"},"jq 1分钟教程"),a("，配合 x-cmd，马上体验。")]),e("li",null,[e("a",{href:"https://jqplay.org/",target:"_blank",rel:"noreferrer"},"网页版快速试用")]),e("li",null,[e("a",{href:"https://jqlang.github.io/jq/tutorial/",target:"_blank",rel:"noreferrer"},"官方的快速体验教程"),a(" 提供了一个案例，该案例以 GitHub API JSON 返回的数据为处理对象，从中提取感兴趣的数据，并最终构造一个新的 JSON 结果。这个例子的可操作性很强，初始用户可以一试。")])],-1),x=e("h2",{id:"jq作为一种优雅的流式处理语言",tabindex:"-1"},[a("jq作为一种优雅的流式处理语言 "),e("a",{class:"header-anchor",href:"#jq作为一种优雅的流式处理语言","aria-label":'Permalink to "jq作为一种优雅的流式处理语言"'},"​")],-1),k=e("p",null,"如果你以语言角度审视 jq，不难发现其设计的独特 -- 这是一门流式处理的语言。该设计的优劣，往往取决于场景和偏好。当然，不少人（包括笔者），刚开始并不习惯这种思维。",-1),b=e("p",null,"不过，这正是笔者认为 jq 值得大家把玩之处 -- 它太特别，以致于往往能带来新的灵感。",-1),f=e("h2",{id:"启动虽慢-性能一流",tabindex:"-1"},[a("启动虽慢，性能一流 "),e("a",{class:"header-anchor",href:"#启动虽慢-性能一流","aria-label":'Permalink to "启动虽慢，性能一流"'},"​")],-1),S=e("p",null,"在命令行处理 JSON 上，jq 在使用广度和欢迎程度可谓一骑绝尘，但在很多相关的新兴的软件的对比报告上，其性能往往是落败的一方。",-1),y=e("p",null,'在开发 x-cmd 中的 JSON 处理工具（ jo 和 ja ）过程中，我在对比测试也发现了这一点。 但也很快发现，jq 的"慢"，其实是在启动时间上 -- 无论数据大小，启动时间至少为30ms。然而一旦起步，其处理效率是非常高的。',-1),N=e("p",null,"不过笔者还没有读过 jq 的源码，以上只是在开发 jo 和 ja 的多次对比得出的结论，但我们对此很有信心。读者不妨观察一下，很多在测试上宣称比 jq 快的工具，基本上都是在处理小数据时，比 jq 快 -- 而测试中 jq 花的时间，都在30ms左右。",-1),O=e("h2",{id:"类似工具",tabindex:"-1"},[a("类似工具 "),e("a",{class:"header-anchor",href:"#类似工具","aria-label":'Permalink to "类似工具"'},"​")],-1),J=e("ol",null,[e("li",null,[a("如果你想处理 YAML 或者 TOML，yq 是一个不错的选择。该工具采用 Go 语言编写，设计参考 jq，支持 xpath 表达式，能处理 YAML、JSON、XML、CSV、TOML。x-cmd 已收录，请参考"),e("a",{href:"/pkg/yq"}," yq")]),e("li",null,[a("dasel 是一个支持众多格式（JSON，CSV，YAML，XML）的命令行方案，我们认为其功能稍逊，但胜在简单易用，能胜任大多数场景。x-cmd 已收录，请参考 "),e("a",{href:"/pkg/dasel"},"dasel")])],-1),E=e("h2",{id:"进一步探索",tabindex:"-1"},[a("进一步探索 "),e("a",{class:"header-anchor",href:"#进一步探索","aria-label":'Permalink to "进一步探索"'},"​")],-1),C=e("ul",null,[e("li",null,[a("jq 的语法不好驾驭 -- 如果你想了解更多的案例，可以看看 x-cmd 团队提供的 "),e("a",{href:"https://x-cmd.com/cb/jq",target:"_blank",rel:"noreferrer"},"jq cookbook")]),e("li",null,"如果你想深入了解，可以参考上述的官网文档体系，选择感兴趣的篇章阅读"),e("li",null,[a("x-cmd 团队还对 jq 生态和参考文章作了一个大纲式的综述，欢迎大家阅读"),e("a",{href:"https://x-cmd.com/awesome/jq",target:"_blank",rel:"noreferrer"},"这里")])],-1),v=e("div",{class:"language-sh vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sh"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#79B8FF"}},"x"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"env"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"use"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"jq")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#005CC5"}},"x"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"env"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"use"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"jq")])])])],-1);function P(F,M,B,L,T,V){const t=n("PackagePage");return o(),r("div",null,[c(t,null,{default:l(()=>[d,h]),abstract:l(()=>[p,j,q,m,_,u,g,x,k,b,f,S,y,N,O,J,E,C]),install:l(()=>[v]),_:1})])}const $=s(i,[["render",P]]);export{A as __pageData,$ as default};
