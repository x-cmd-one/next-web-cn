import{_ as t,C as r,o as i,c as s,H as o,w as n,k as e,a as l}from"./chunks/framework.98e11516.js";const M=JSON.parse('{"title":"hyperfine","titleTemplate":"x-cmd package | 命令行基准测试工具。","description":"x-cmd package hyperfine | 命令行基准测试工具。","frontmatter":{"name":"hyperfine","titleTemplate":"x-cmd package | 命令行基准测试工具。","head":[["meta",{"name":"og:title","content":"hyperfine | x-cmd package"}],["meta",{"name":"og:description","content":"命令行基准测试工具。"}],["meta",{"name":"description","content":"x-cmd package hyperfine | 命令行基准测试工具。"}]],"links":[{"type":"1min","text":"hyperfine","link":"/1min/hyperfine"},{"type":"mod","text":"`x env` => 文档","link":"/mod/env"}],"homepage":"https://github.com/sharkdp/hyperfine","license":"MIT","version":{"stable":"v0.0.1"},"support":["darwin/x64","darwin/arm64","linux/x64","linux/arm64","win/x64"],"source":{"repack-official":["https://github.com/x-cmd-build/hyperfine/releases","https://gitcode.net/x-cmd-build/hyperfine/-/releases"]},"aside":false,"outline":false,"x-term-speg":"pkg/hyperfine.cn","x-term-name":"hyperfine","x-term-desc":"命令行基准测试工具。","x-term-size":"large"},"headers":[],"relativePath":"pkg/hyperfine.md","filePath":"pkg/hyperfine.md"}'),c={name:"pkg/hyperfine.md"},h=e("h1",{id:"hyperfine",tabindex:"-1"},[l("hyperfine "),e("a",{class:"header-anchor",href:"#hyperfine","aria-label":'Permalink to "hyperfine"'},"​")],-1),p=e("p",{class:"x-desc"},"命令行基准测试工具。",-1),d=e("h2",{id:"简介",tabindex:"-1"},[l("简介 "),e("a",{class:"header-anchor",href:"#简介","aria-label":'Permalink to "简介"'},"​")],-1),u=e("p",null,"hyperfine 是一个用于命令行基准测试的开源工具，可以对多次命令运行的时间进行分析，帮助开发人员评估和比较不同命令或脚本的性能。它是用 Rust 语言开发的，可以在 Windows、macOS 和 Linux 上运行。",-1),m=e("h2",{id:"首次用户",tabindex:"-1"},[l("首次用户 "),e("a",{class:"header-anchor",href:"#首次用户","aria-label":'Permalink to "首次用户"'},"​")],-1),f=e("ol",null,[e("li",null,[e("code",null,"hyperfine <command> ..."),l(" 就可对命令进行基本测试。")]),e("li",null,[l("本文的 demo 展现了如何使用 hyperfine 测试 "),e("code",null,"ls"),l(" 和 "),e("code",null,"sleep"),l(" 命令并将结果导出到 Markdown 文件。")]),e("li",null,[l("x-cmd也提供了"),e("a",{href:"/1min/hyperfine"},"1分钟教程"),l("可以帮你快速入门。")])],-1),y=e("h2",{id:"功能特点",tabindex:"-1"},[l("功能特点 "),e("a",{class:"header-anchor",href:"#功能特点","aria-label":'Permalink to "功能特点"'},"​")],-1),_=e("ol",null,[e("li",null,[l("统计分析多次运行的结果。 "),e("ul",null,[e("li",null,[l("默认情况下，对每个命令至少执行 10 次基准测试，每次至少测量 3 秒钟，可以通过 "),e("code",null,"-r/--runs "),l("参数控制运行次数。")])])]),e("li",null,"支持任意的 shell 命令。"),e("li",null,"持续反馈基准测试进度和当前的估计情况， 可检测异常值。"),e("li",null,[l("预热运行和预先命令，使得后续的测试结果更加准确和可靠。 "),e("ul",null,[e("li",null,[l("如果要在热缓存上运行基准测试，"),e("code",null,"-w / --warmup"),l(" 选项，可以用于指定在实际基准测试之前执行的预热运行次数")]),e("li",null,[l("如果要运行冷缓存基准测试，可以使用 "),e("code",null,"-p/--prepare"),l(" 选项，在每次计时运行之前运行指定命令，清楚缓存")])])]),e("li",null,"可将结果导出为各种格式: CSV, JSON, Markdown, AsciiDoc.")],-1),g=e("h2",{id:"竞品和相关作品",tabindex:"-1"},[l("竞品和相关作品 "),e("a",{class:"header-anchor",href:"#竞品和相关作品","aria-label":'Permalink to "竞品和相关作品"'},"​")],-1),k=e("ul",null,[e("li",null,[e("a",{href:"https://en.wikipedia.org/wiki/Time_(Unix)",target:"_blank",rel:"noreferrer"},"time"),l(" 用于确定指定命令的执行持续时间，大多数情况下作为内置 shell 存在。")]),e("li",null,[e("a",{href:"https://github.com/Gabriella439/bench",target:"_blank",rel:"noreferrer"},"bench"),l(" 是 "),e("code",null,"time"),l(" 的更强大的替代品，可以快速测量一些基本的性能数据。")])],-1),x=e("h2",{id:"进一步阅读",tabindex:"-1"},[l("进一步阅读 "),e("a",{class:"header-anchor",href:"#进一步阅读","aria-label":'Permalink to "进一步阅读"'},"​")],-1),b=e("ul",null,[e("li",null,[e("a",{href:"https://github.com/sharkdp/hyperfine",target:"_blank",rel:"noreferrer"},"hyperfine github 官网")]),e("li",null,[e("a",{href:"https://www.mankier.com/1/hyperfine",target:"_blank",rel:"noreferrer"},"hyperfine - Man Page")]),e("li",null,[e("a",{href:"https://www.cnblogs.com/jyi2ya/p/17237806.html",target:"_blank",rel:"noreferrer"},"hyperfine 使用指南")])],-1),w=e("div",{class:"language-sh vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sh"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#79B8FF"}},"x"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"env"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"use"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"hyperfine")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#005CC5"}},"x"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"env"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"use"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"hyperfine")])])])],-1);function E(v,P,C,F,B,N){const a=r("PackagePage");return i(),s("div",null,[o(a,null,{default:n(()=>[h,p]),abstract:n(()=>[d,u,m,f,y,_,g,k,x,b]),install:n(()=>[w]),_:1})])}const S=t(c,[["render",E]]);export{M as __pageData,S as default};
