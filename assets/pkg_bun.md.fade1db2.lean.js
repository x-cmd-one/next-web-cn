import{_ as t,C as s,o,c as r,H as i,w as n,k as e,a as l}from"./chunks/framework.98e11516.js";const w=JSON.parse('{"title":"bun","titleTemplate":"x-cmd package | bun 是一个快速的多合一 JavaScript 运行时","description":"x-cmd package bun | bun 是一个快速的多合一 JavaScript 运行时","frontmatter":{"name":"bun","titleTemplate":"x-cmd package | bun 是一个快速的多合一 JavaScript 运行时","head":[["meta",{"name":"og:title","content":"bun | x-cmd package"}],["meta",{"name":"og:description","content":"bun 是一个快速的多合一 JavaScript 运行时"}],["meta",{"name":"description","content":"x-cmd package bun | bun 是一个快速的多合一 JavaScript 运行时"}]],"links":[{"type":"1min","text":"bun","link":"/1min/bun"},{"type":"mod","text":"`x env` => 文档","link":"/mod/env"}],"homepage":"https://github.com/oven-sh/bun","license":"MIT","version":{"stable":"v0.6.14"},"support":["linux/x64","linux/arm64","darwin/x64","darwin/arm64"],"source":{"repack-official":["https://github.com/x-cmd-build/bun/releases","https://gitcode.net/x-cmd-build/bun/-/releases"]},"aside":false,"outline":false,"x-term-speg":"pkg/bun.cn","x-term-name":"bun","x-term-desc":"bun 是一个快速的多合一 JavaScript 运行时","x-term-size":"large"},"headers":[],"relativePath":"pkg/bun.md","filePath":"pkg/bun.md"}'),c={name:"pkg/bun.md"},u=e("h1",{id:"bun",tabindex:"-1"},[l("bun "),e("a",{class:"header-anchor",href:"#bun","aria-label":'Permalink to "bun"'},"​")],-1),d=e("p",{class:"x-desc"},"bun 是一个快速的多合一 JavaScript 运行时",-1),p=e("h2",{id:"简介",tabindex:"-1"},[l("简介 "),e("a",{class:"header-anchor",href:"#简介","aria-label":'Permalink to "简介"'},"​")],-1),h=e("p",null,"Bun 是一个基于 JavaScriptCore 使用 Zig 编程语言构建的 JavaScript 运行时，于 2021 年由 Jarred Sumner 创造，目标是为用户提供一个效率更高的 Node.js 替代选择方案。",-1),b=e("ol",null,[e("li",null,[e("strong",null,"速度"),l("：相比于 Node，有着更快的启动速度以及更小内存占用。")]),e("li",null,[e("strong",null,"Node 兼容"),l("： "),e("ol",null,[e("li",null,[l("Bun 以原生代码的方式直接实现了数百个 Node.js 内置库，包括 "),e("code",null,"fs"),l(" 、 "),e("code",null,"path"),l(" 、 "),e("code",null,"Buffer"),l(" 等。")]),e("li",null,"从包管理工具，测试构建，执行器，Bun都追求与 Node.js 及其生态的兼容性。")])]),e("li",null,[e("strong",null,"TypeScript"),l("：Bun 可以像运行普通 JavaScript 文件一样直接运行 "),e("code",null,".ts"),l(" 和 "),e("code",null,".tsx"),l(" 文件，但不会进行类型检查。")])],-1),m=e("h2",{id:"首次用户",tabindex:"-1"},[l("首次用户 "),e("a",{class:"header-anchor",href:"#首次用户","aria-label":'Permalink to "首次用户"'},"​")],-1),_=e("ol",null,[e("li",null,[l("本页面的demo提供了一个"),e("code",null,"Hello X-CMD"),l("的实例，也提供了一个利用"),e("code",null,"bun x"),l("运行的一个http服务程序的实例。")]),e("li",null,[l("x-cmd提供了"),e("a",{href:"/1min/bun"},"1min"),l("教程，里面展示了如何在 bun 如何使用IO，文件，网络，进程等基础功能。")])],-1),g=e("h2",{id:"技术特点",tabindex:"-1"},[l("技术特点 "),e("a",{class:"header-anchor",href:"#技术特点","aria-label":'Permalink to "技术特点"'},"​")],-1),x=e("ol",null,[e("li",null,"Bun采用zig这门新型的底层语言进行开发，以效率为第一目标。"),e("li",null,"包管理工具 (bun install)：与 npm 包管理工具兼容，有开箱即用 workspaces 支持，且的得益于全局安装缓存与二进制的锁文件，在每个操系统中都有极快的依赖安装速度。"),e("li",null,"代码测试 (bun test)：内置兼容 Jest 语法，模拟 Dom 与 浏览器API，Watch 监听模式与快照测试等测试套件。"),e("li",null,"代码构建 (bun build)：内置打包构建工具 (bundle)"),e("li",null,[l("包执行器 (bun x)：相当于 "),e("code",null,"npx"),l(" 无需全局安装或添加项目依赖，快速运行可执行的远程软件包，且得益于 Bun 出色的启动速度，可快速运行可执行软件包来达到我们的功能目的。")])],-1),k=e("h2",{id:"竞品",tabindex:"-1"},[l("竞品 "),e("a",{class:"header-anchor",href:"#竞品","aria-label":'Permalink to "竞品"'},"​")],-1),f=e("ol",null,[e("li",null,[l("deno 是一个由 Node 原作者采用 Rust 开发、与bun的定位基本一致的产品，其开发时间更早，生态相对更成熟。x-cmd 也引入了 deno，有兴趣的读者可以参考 "),e("a",{href:"/pkg/deno"},"x-cmd pkg deno"),l("。")]),e("li",null,[l("传奇程序员 Fabric Bellard 开发的 QuickJS，是一个非常小巧（大部分 release 的压缩包都小于1MB）的JavaScript引擎。该引擎只提供 ES2020 的兼容语法以及基本的内置库。有兴趣的读者可以到其"),e("a",{href:"https://bellard.org/quickjs/",target:"_blank",rel:"noreferrer"},"官网"),l("了解 -- Fabric Bellard 还开发了 ffmpeg，qemu，Tiny C Compiler，JSLinux 等强大而有趣的产品，是一个非常值得关注的程序员。")])],-1),v=e("h2",{id:"进一步阅读",tabindex:"-1"},[l("进一步阅读 "),e("a",{class:"header-anchor",href:"#进一步阅读","aria-label":'Permalink to "进一步阅读"'},"​")],-1),y=e("ul",null,[e("li",null,[l("如果你首次使用，关于 bun "),e("a",{href:"/1min/bun"},"1分钟教程"),l("可以帮你快速入门")]),e("li",null,[l("bun官方的"),e("a",{href:"https://bun.sh/docs",target:"_blank",rel:"noreferrer"},"最新版文档")]),e("li",null,[l("bun"),e("a",{href:"https://bun.sh/guides",target:"_blank",rel:"noreferrer"},"常见使用方式和代码示例")])],-1),B=e("div",{class:"language-sh vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sh"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#79B8FF"}},"x"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"env"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"use"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"bun")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#005CC5"}},"x"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"env"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"use"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"bun")])])])],-1);function E(S,J,C,F,P,N){const a=s("PackagePage");return o(),r("div",null,[i(a,null,{default:n(()=>[u,d]),abstract:n(()=>[p,h,b,m,_,g,x,k,f,v,y]),install:n(()=>[B]),_:1})])}const j=t(c,[["render",E]]);export{w as __pageData,j as default};
