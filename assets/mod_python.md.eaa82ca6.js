import{_ as l,C as e,o as c,c as d,H as a,w as r,Y as n,k as o,a as t}from"./chunks/framework.98e11516.js";const T=JSON.parse('{"title":"x python","description":"x python | x-cmd module | 增强型 python 命令","frontmatter":{"head":[["meta",{"name":"og:title","content":"x python | x-cmd"}],["meta",{"name":"og:description","content":"增强型 python 命令"}],["meta",{"name":"description","content":"x python | x-cmd module | 增强型 python 命令"}]],"links":[{"type":"1min","link":"/1min/python","text":"查看 `x python` 1min"},{"type":"pkg","link":"/pkg/python","text":"查看 `python` 软件包信息"}]},"headers":[],"relativePath":"mod/python.md","filePath":"mod/python.md"}'),h={name:"mod/python.md"},i=n('<h1 id="x-python" tabindex="-1">x python <a class="header-anchor" href="#x-python" aria-label="Permalink to &quot;x python&quot;">​</a></h1><p class="x-desc">增强型 python 命令</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>继承 &#39;python&#39; 参数选项与指令</p><p>可查看 <a href="https://docs.python.org/" target="_blank" rel="noreferrer">https://docs.python.org/</a> 官网</p><p>可通过 <code>x python --help</code> 命令查看更多信息</p></div><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>python 模块致力于增强 python 用户在命令行中的用户体验。</p><h2 id="尽力而为的一致" tabindex="-1">尽力而为的一致 <a class="header-anchor" href="#尽力而为的一致" aria-label="Permalink to &quot;尽力而为的一致&quot;">​</a></h2><p>尽量与 python 命令保持一致。但因为会有增强所以会导致不同，例如</p><ol><li><code>x python me:hi.py</code>，python模块会先把 试着从 hub 中下载 该文件到本地，然后执行</li><li>因为 1 的增强，如果你刚好想运行当前文件夹中 <code>me:hi.py</code>，只能够在前面加上 <code>./</code>: <code>x python ./me:hi.py</code></li><li>我们认为目录名中存在 &quot;:&quot; 的情况极为罕见，因此有如此设计。</li></ol><h2 id="加入-gpt-功能" tabindex="-1">加入 GPT 功能 <a class="header-anchor" href="#加入-gpt-功能" aria-label="Permalink to &quot;加入 GPT 功能&quot;">​</a></h2><p>如果你想知道如何使用 python 命令实现功能，可以采用 co ( copilot，简写为 <code>,</code> ): 例如 <code>x python , 如何设置一个 HTTP 服务器以提供所有位于 $HOME 的内容 </code>，就会返回 <code>python -m http.server --directory &quot;$HOME&quot;</code></p><p>如果你需要以此查询相应的代码，可以采用 coco（code copilot, 简写为 <code>,,</code> ):</p><ol><li><code>x python ,, 将 $HOME 目录下文件名放到 dict</code></li><li>我们会采用本地的 python 解析器 进行 lint，来检测语法的正确性。如果有问题，用户可以选择将问题和代码打包返回 gpt，重新提问。</li></ol>',12),y=n('<h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">python</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">#</span><span style="color:#F97583;">1&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">#</span><span style="color:#E1E4E8;">n</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">python</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">#</span><span style="color:#D73A49;">1&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">#</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><div class="table-wrap"><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>#1</code></td><td>python script</td></tr><tr><td><code>#n</code></td><td></td></tr></tbody></table></div><br>',5),_=o("h2",{id:"相关链接",tabindex:"-1"},[t("相关链接 "),o("a",{class:"header-anchor",href:"#相关链接","aria-label":'Permalink to "相关链接"'},"​")],-1),m=o("div",{class:"tip custom-block"},[o("p",{class:"custom-block-title"},"TIP"),o("p",null,[t("在交互式终端中（如 zsh, bash ...），可以使用 "),o("kbd",null,"Tab"),t(" 获取补全信息")]),o("p",null,[t("运行 "),o("code",null,"CMD SUBCOMMAND --help"),t(" 可以获取命令的更多信息")])],-1);function u(x,b,k,E,g,C){const s=e("AdsContent"),p=e("DocsLinkCard");return c(),d("div",null,[i,a(s),y,a(p,null,{default:r(()=>[_]),_:1}),m])}const P=l(h,[["render",u]]);export{T as __pageData,P as default};
