import{_ as o,C as t,o as s,c as r,H as i,w as l,k as e,a as n}from"./chunks/framework.98e11516.js";const J=JSON.parse('{"title":"deno","titleTemplate":"x-cmd package | Deno 是一个 JavaScript 和 TypeScript 运行时环境","description":"x-cmd package deno | Deno 是一个 JavaScript 和 TypeScript 运行时环境","frontmatter":{"name":"deno","titleTemplate":"x-cmd package | Deno 是一个 JavaScript 和 TypeScript 运行时环境","head":[["meta",{"name":"og:title","content":"deno | x-cmd package"}],["meta",{"name":"og:description","content":"Deno 是一个 JavaScript 和 TypeScript 运行时环境"}],["meta",{"name":"description","content":"x-cmd package deno | Deno 是一个 JavaScript 和 TypeScript 运行时环境"}]],"links":[{"type":"1min","text":"deno","link":"/1min/deno"},{"type":"mod","text":"`x env` => 文档","link":"/mod/env"}],"homepage":"https://github.com/denoland/deno/","license":"MIT","version":{"stable":"v1.22.0"},"support":["linux/x64","darwin/arm64","darwin/x64","win/x64"],"source":{"official":["https://github.com/denoland/deno/releases"]},"aside":false,"outline":false,"x-term-speg":"pkg/deno.cn","x-term-name":"deno","x-term-desc":"Deno 是一个 JavaScript 和 TypeScript 运行时环境","x-term-size":"large"},"headers":[],"relativePath":"pkg/deno.md","filePath":"pkg/deno.md"}'),c={name:"pkg/deno.md"},d=e("h1",{id:"deno",tabindex:"-1"},[n("deno "),e("a",{class:"header-anchor",href:"#deno","aria-label":'Permalink to "deno"'},"​")],-1),p=e("p",{class:"x-desc"},"Deno 是一个 JavaScript 和 TypeScript 运行时环境",-1),h=e("h2",{id:"简介",tabindex:"-1"},[n("简介 "),e("a",{class:"header-anchor",href:"#简介","aria-label":'Permalink to "简介"'},"​")],-1),u=e("p",null,"Deno 是一个基于 V8 引擎和 Rust 语言构建的 JavaScript 和 TypeScript 运行时环境，于 2018 年由 Ryan Dahl 在演讲中宣布，并在 2020 年正式发布 1.0，目标是提供一个高效且安全的脚本环境。",-1),m=e("ol",null,[e("li",null,[e("strong",null,"安全性"),n("：默认情况下，Deno 不允许访问文件系统、网络、环境变量等，除非用户明确授权。")]),e("li",null,[e("strong",null,"远程 URL 加载模块"),n("：Deno 支持通过 URL 导入模块，这意味着用户可以从任何可访问的资源(如 Github、NPM 等)加载模块。这使得 Deno 更加灵活和可扩展。")]),e("li",null,[e("strong",null,"Node 生态兼容"),n("：Deno 向后兼容 Node.js 内置 API 和 npm 上超过 200 万个模块。")]),e("li",null,[e("strong",null,"内置开发工具"),n("：提供如 运行测试 (deno test)、格式化程序 (deno fmt)、代码校验 (deno lint) 等可以帮助开发人员提高开发效率和代码质量。")])],-1),_=e("h2",{id:"首次用户",tabindex:"-1"},[n("首次用户 "),e("a",{class:"header-anchor",href:"#首次用户","aria-label":'Permalink to "首次用户"'},"​")],-1),g=e("ol",null,[e("li",null,[n("本页面的 demo 提供了一个 "),e("code",null,"Hello X-CMD"),n(" 的实例，也提供了一个利用 "),e("code",null,"deno x"),n(" 运行的一个 http 服务程序的实例。")]),e("li",null,[n("x-cmd提供了 "),e("a",{href:"/1min/deno"},"1min"),n(" 教程，里面展示了如何在 bun 如何使用 IO，文件，网络，进程等基础功能。")])],-1),x=e("h2",{id:"技术特点",tabindex:"-1"},[n("技术特点 "),e("a",{class:"header-anchor",href:"#技术特点","aria-label":'Permalink to "技术特点"'},"​")],-1),k=e("ol",null,[e("li",null,[n("deno的目标是通过提供一个更严谨更安全的js运行时，让js脚本变成一个更广泛使用的后台语言 "),e("ul",null,[e("li",null,"增加更多的默认权限的控制"),e("li",null,"开箱即可运行 Typescript，以推广更严谨更安全的代码")])]),e("li",null,"开箱即提供有利于适合工程化与团队合作的配套工具，如测试，格式化，代码校验等"),e("li",null,"通过 URL 方式，快速引入模块，简化了模块的引入与使用；也可以通过 URL 方式运行远程 JS/TS 脚本，简化了 JS/TS 脚本的发布与使用")],-1),f=e("h2",{id:"进一步阅读",tabindex:"-1"},[n("进一步阅读 "),e("a",{class:"header-anchor",href:"#进一步阅读","aria-label":'Permalink to "进一步阅读"'},"​")],-1),y=e("ul",null,[e("li",null,[n("关于 x-cmd 对于 deno 在命令行使用中进行的增强扩展，具体可以查看: "),e("a",{href:"/mod/deno"},"module for deno")]),e("li",null,[n("deno 官方的"),e("a",{href:"https://deno.land/manual/introduction",target:"_blank",rel:"noreferrer"},"最新版文档")]),e("li",null,[n("deno 官方的"),e("a",{href:"https://deno.land/api@v1.36.3",target:"_blank",rel:"noreferrer"},"API 文档")]),e("li",null,[n("deno 的"),e("a",{href:"https://www.denojs.cn/",target:"_blank",rel:"noreferrer"},"中国社区网站"),n("，里面提供了中文开发者所需的几乎所有的文档资源")])],-1),v=e("div",{class:"language-sh vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sh"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#79B8FF"}},"x"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"env"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"use"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"deno")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#005CC5"}},"x"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"env"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"use"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"deno")])])])],-1);function b(S,E,D,T,P,C){const a=t("PackagePage");return s(),r("div",null,[i(a,null,{default:l(()=>[d,p]),abstract:l(()=>[h,u,m,_,g,x,k,f,y]),install:l(()=>[v]),_:1})])}const w=o(c,[["render",b]]);export{J as __pageData,w as default};
