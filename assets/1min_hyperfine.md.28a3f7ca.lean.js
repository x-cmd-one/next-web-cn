import{_ as l,C as p,o,c as t,H as c,w as n,k as s,a as e}from"./chunks/framework.98e11516.js";const B=JSON.parse('{"title":"hyperfine","titleTemplate":"x-cmd 1 分钟快速上手","description":"x-cmd 1 分钟 | hyperfine 快速上手 | 命令行基准测试工具","frontmatter":{"name":"hyperfine","titleTemplate":"x-cmd 1 分钟快速上手","head":[["meta",{"name":"og:title","content":"x-cmd 1 分钟 | hyperfine 快速上手"}],["meta",{"name":"og:description","content":"命令行基准测试工具"}],["meta",{"name":"description","content":"x-cmd 1 分钟 | hyperfine 快速上手 | 命令行基准测试工具"}]],"items":[{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">hyperfine</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">ls</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">hyperfine</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">ls</span></span></code></pre>\\n</div>","#desc":{"cn":"对 ls 命令进行基准测试","en":"Benchmarking the ls command"},"desc":"对 ls 命令进行基准测试"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">hyperfine</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">--runs</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">5</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;sleep 0.3&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">hyperfine</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">--runs</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">5</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;sleep 0.3&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"连续测试 5 次 `sleep 0.3` 命令，然后计算其平均值和标准差","en":"Test the \'sleep 0.3\' command 5 consecutive times, and then calculate its average and standard deviation"},"desc":"连续测试 5 次 <code>sleep 0.3</code> 命令，然后计算其平均值和标准差"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">hyperfine</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">-P</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">delay</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">0.3</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">0.7</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">-D</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">0.2</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;sleep {delay}&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">hyperfine</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">-P</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">delay</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">0.3</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">0.7</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">-D</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">0.2</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;sleep {delay}&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"对同一命令不同参数的情况进行测试","en":"Testing the same command with different parameters"},"desc":"对同一命令不同参数的情况进行测试"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">hyperfine</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;ls&#39;</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">--export-markdown</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">test.md</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">hyperfine</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;ls&#39;</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">--export-markdown</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">test.md</span></span></code></pre>\\n</div>","#desc":{"cn":"将基准测试结果导出为命名为 test 的 Markdown 文件","en":"Export the benchmark results as a Markdown file named test"},"desc":"将基准测试结果导出为命名为 test 的 Markdown 文件"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">md</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">show</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">test.md</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">md</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">show</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">test.md</span></span></code></pre>\\n</div>","#desc":{"cn":"查看新生成的 test 的 Markdown 文件的内容","en":"Review the contents of the newly generated test.md file"},"desc":"查看新生成的 test 的 Markdown 文件的内容"}],"aside":false,"outline":false,"x-term-speg":"1min/hyperfine.cn","x-term-name":"hyperfine","x-term-desc":"命令行基准测试工具","x-term-size":"large","links":[{"type":"pkg","text":"hyperfine","link":"/pkg/hyperfine"}]},"headers":[],"relativePath":"1min/hyperfine.md","filePath":"1min/hyperfine.md"}'),r={name:"1min/hyperfine.md"},i=s("h1",{id:"hyperfine",tabindex:"-1"},[e("hyperfine "),s("a",{class:"header-anchor",href:"#hyperfine","aria-label":'Permalink to "hyperfine"'},"​")],-1),d=s("p",{class:"visually-hidden"}," 命令行基准测试工具 ",-1),y=s("p",null,[e("本教程演示了 "),s("code",null,"hyperfine"),e(" 的基本功能和用法:")],-1),h=s("ol",null,[s("li",null,[e("基准测试： "),s("ul",null,[s("li",null,"这里以默认的基准测试方式（至少测试 10 次并测量 3 秒）来运行 ls 命令"),s("li",null,[e("使用 "),s("code",null,"--runs <number>"),e(" 参数来指定命令的执行次数。")])])]),s("li",null,[e("使用 "),s("code",null,"-P <VAR> <MIN> <MAX>"),e(" 指定一个范围，对范围内的每个值执行基准测试。")]),s("li",null,[e("导出测试结果： "),s("ul",null,[s("li",null,[e("使用 "),s("code",null,"--export-markdown <file>"),e(" 将测试结果导出为 markdown 格式的文件")]),s("li",null,"已知的导出格式有：csv, json, asciidoc, markdown, orgmode")])])],-1),E=s("p",null,"对此有兴趣的用户，可以查看：",-1),m=s("ul",null,[s("li",null,[s("a",{href:"/pkg/hyperfine"},"x-cmd pkg for hyperfine")])],-1);function F(u,C,g,v,f,k){const a=p("OneMinutePage");return o(),t("div",null,[c(a,null,{default:n(()=>[i,d]),abstract:n(()=>[y,h,E,m]),_:1})])}const _=l(r,[["render",F]]);export{B as __pageData,_ as default};
