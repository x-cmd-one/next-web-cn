import{_ as n,C as l,o as t,c as p,H as c,w as a,k as s,a as e}from"./chunks/framework.98e11516.js";const B=JSON.parse('{"title":"tokei","titleTemplate":"x-cmd 1 分钟快速上手","description":"x-cmd 1 分钟 | tokei 快速上手 | tokei 是一个用 Rust 编写的代码行数统计工具","frontmatter":{"name":"tokei","titleTemplate":"x-cmd 1 分钟快速上手","head":[["meta",{"name":"og:title","content":"x-cmd 1 分钟 | tokei 快速上手"}],["meta",{"name":"og:description","content":"tokei 是一个用 Rust 编写的代码行数统计工具"}],["meta",{"name":"description","content":"x-cmd 1 分钟 | tokei 快速上手 | tokei 是一个用 Rust 编写的代码行数统计工具"}]],"items":[{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">tokei</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">data.yml</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">tokei</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">data.yml</span></span></code></pre>\\n</div>","#desc":{"cn":"统计单个文件的代码","en":"Count the code of the project"},"desc":"统计单个文件的代码"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">tokei</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">./</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">tokei</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">./</span></span></code></pre>\\n</div>","#desc":{"cn":"统计整个项目的代码","en":"Count the code of the project"},"desc":"统计整个项目的代码"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">tokei</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">--sort</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">code</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">tokei</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">--sort</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">code</span></span></code></pre>\\n</div>","#desc":{"cn":"根据语言进行排序","en":"Sort languages based on column"},"desc":"根据语言进行排序"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">tokei</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">--exclude</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;*.json&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">tokei</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">--exclude</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;*.json&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"忽略统计 json 文件","en":"Ignore statistics json files"},"desc":"忽略统计 json 文件"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">tokei</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">--type</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">json</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">tokei</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">--type</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">json</span></span></code></pre>\\n</div>","#desc":{"cn":"仅统计 json 文件","en":"Only counted json files"},"desc":"仅统计 json 文件"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">tokei</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">--type</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">json</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">-o</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">yaml</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">tokei</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">--type</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">json</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">-o</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">yaml</span></span></code></pre>\\n</div>","#desc":{"cn":"以 yaml 格式输出统计信息","en":"Output statistical information in yaml format"},"desc":"以 yaml 格式输出统计信息"}],"aside":false,"outline":false,"x-term-speg":"1min/tokei.cn","x-term-name":"tokei","x-term-desc":"tokei 是一个用 Rust 编写的代码行数统计工具","x-term-size":"large","links":[{"type":"pkg","text":"tokei","link":"/pkg/tokei"}]},"headers":[],"relativePath":"1min/tokei.md","filePath":"1min/tokei.md"}'),r={name:"1min/tokei.md"},i=s("h1",{id:"tokei",tabindex:"-1"},[e("tokei "),s("a",{class:"header-anchor",href:"#tokei","aria-label":'Permalink to "tokei"'},"​")],-1),d=s("p",{class:"visually-hidden"}," tokei 是一个用 Rust 编写的代码行数统计工具 ",-1),y=s("p",null,[e("本教程演示了 "),s("code",null,"tokei"),e(" 的基本功能和用法:")],-1),E=s("ol",null,[s("li",null,[s("strong",null,"统计代码行数"),e("。可统计整个项目或某个文件的代码行数，返回的 table 将显示文件数、这些文件中的总行数以及按语言分组的代码、注释和空格。")]),s("li",null,[s("strong",null,"排除文件夹、指定统计类型"),e("。在本教程中，通过 "),s("code",null,"--exclude"),e(" 参数（该选项可以使用多次）来排除一些目录，或者通过 "),s("code",null,"--type"),e(" 参数来指定需要统计的代码类型，多个值用逗号分隔。注意，"),s("code",null,"tokei"),e(" 会自动忽略 "),s("code",null,".gitignore"),e(" 和 "),s("code",null,".ignore"),e(" 文件中的匹配。")]),s("li",null,[s("strong",null,"输出为不同的格式"),e("。这里以 yaml 格式输出统计信息，已知的输出格式还有 CBOR，JSON，YAML。")])],-1),h=s("p",null,"进一步阅读：",-1),u=s("ul",null,[s("li",null,[e("x-cmd 对于 tokei 的介绍和快速安装的方法，可以查看: "),s("a",{href:"/pkg/tokei"},"x-cmd pkg for tokei")])],-1);function k(g,m,F,C,v,x){const o=l("OneMinutePage");return t(),p("div",null,[c(o,null,{default:a(()=>[i,d]),abstract:a(()=>[y,E,h,u]),_:1})])}const _=n(r,[["render",k]]);export{B as __pageData,_ as default};
