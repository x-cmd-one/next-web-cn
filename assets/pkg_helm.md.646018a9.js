import{_ as r,C as a,o as s,c as o,H as h,w as t,k as e,a as l}from"./chunks/framework.98e11516.js";const N=JSON.parse('{"title":"helm","titleTemplate":"x-cmd package | helm 是 Kubernetes 的包管理器","description":"x-cmd package helm | helm 是 Kubernetes 的包管理器","frontmatter":{"name":"helm","titleTemplate":"x-cmd package | helm 是 Kubernetes 的包管理器","head":[["meta",{"name":"og:title","content":"helm | x-cmd package"}],["meta",{"name":"og:description","content":"helm 是 Kubernetes 的包管理器"}],["meta",{"name":"description","content":"x-cmd package helm | helm 是 Kubernetes 的包管理器"}]],"links":[{"type":"1min","text":"helm","link":"/1min/helm"},{"type":"mod","text":"`x env` => 文档","link":"/mod/env"}],"homepage":"https://github.com/helm/helm","license":"MIT","version":{"stable":"v0.0.1"},"support":["linux/arm64","darwin/arm64","linux/x64","darwin/x64","win/x64"],"source":{"repack-official":["https://github.com/x-cmd-build/helm/releases","https://gitcode.net/x-cmd-build/helm/-/releases"]},"aside":false,"outline":false,"x-term-speg":"pkg/helm.cn","x-term-name":"helm","x-term-desc":"helm 是 Kubernetes 的包管理器","x-term-size":"large"},"headers":[],"relativePath":"pkg/helm.md","filePath":"pkg/helm.md"}'),c={name:"pkg/helm.md"},m=e("h1",{id:"helm",tabindex:"-1"},[l("helm "),e("a",{class:"header-anchor",href:"#helm","aria-label":'Permalink to "helm"'},"​")],-1),i=e("p",{class:"x-desc"},"helm 是 Kubernetes 的包管理器",-1),u=e("h2",{id:"简介",tabindex:"-1"},[l("简介 "),e("a",{class:"header-anchor",href:"#简介","aria-label":'Permalink to "简介"'},"​")],-1),d=e("p",null,[l("Helm 是一个用 Go 编写的开源工具，主要用于 "),e("a",{href:"https://kubernetes.io/",target:"_blank",rel:"noreferrer"},"Kubernetes"),l(" 应用程序 (Chart) 的创建、打包、发布、部署、版本管理。对于 Helm 而言，每个包被称为一个 Chart，采用 TAR 格式。类似于 "),e("code",null,"apt"),l(" 的 DEB 包或者 "),e("code",null,"yum"),l(" 的 RPM 包，其包含了一组定义 Kubernetes 资源相关的 YAML 文件。")],-1),p=e("p",null,"Kubernetes 是一个容器编排平台，但在部署和管理复杂的应用程序时，需要编写大量的 YAML 配置文件，这往往复杂且容易出错。Helm 的出现解决了这个问题，使得 Kubernetes 应用程序的打包、发布和管理变得更加容易和可维护。",-1),b=e("h2",{id:"首次用户",tabindex:"-1"},[l("首次用户 "),e("a",{class:"header-anchor",href:"#首次用户","aria-label":'Permalink to "首次用户"'},"​")],-1),_=e("ol",null,[e("li",null,[l("本文的 demo 展现了 “通过 x-cmd 快速使用 "),e("code",null,"helm"),l("”")]),e("li",null,[l("如果你是 "),e("code",null,"helm"),l(" 的初学者，你可以参考 x-cmd 提供的 "),e("a",{href:"/1min/helm"},"Helm 一分钟快速入门"),l(" 教程，以了解基本操作。")])],-1),g=e("h2",{id:"技术特点",tabindex:"-1"},[l("技术特点 "),e("a",{class:"header-anchor",href:"#技术特点","aria-label":'Permalink to "技术特点"'},"​")],-1),k=e("ol",null,[e("li",null,[e("strong",null,"Helm Charts"),l("：Helm 使用 Helm Charts 来定义 Kubernetes 应用程序的结构和配置。Charts 可以包括容器镜像、配置文件、服务定义等，使应用程序的部署变得可重复和可自定义。详情请参考 "),e("a",{href:"https://helm.sh/docs/topics/charts/",target:"_blank",rel:"noreferrer"},"Helm Charts"),l("。")]),e("li",null,[e("strong",null,"依赖管理"),l("：允许应用程序定义和管理依赖关系，这意味着你可以轻松地将其他 Charts 引入你的应用程序中，而不必手动处理依赖。详情请参考 "),e("a",{href:"https://helm.sh/docs/helm/helm_dependency/",target:"_blank",rel:"noreferrer"},"Helm Dependencies"),l("。")]),e("li",null,[e("strong",null,"版本控制"),l("：可以轻松升级和回滚应用程序。这使得在不同环境中进行部署和维护变得更加简单。详情请参考 "),e("a",{href:"https://helm.sh/docs/helm/helm_rollback/",target:"_blank",rel:"noreferrer"},"Helm Rollback"),l("。")]),e("li",null,[e("strong",null,"插件系统"),l("：允许用户扩展 "),e("code",null,"helm"),l(" 的功能。你可以编写自定义插件来满足特定的需求。详情请参考 "),e("a",{href:"https://helm.sh/docs/topics/plugins/",target:"_blank",rel:"noreferrer"},"Helm Plugins"),l("。")]),e("li",null,[e("strong",null,"社区支持"),l("：有一个庞大的社区，提供了各种 Charts 和插件，可以加速你的应用程序开发和部署过程。详情请参考 "),e("a",{href:"https://hub.helm.sh/",target:"_blank",rel:"noreferrer"},"Helm Hub"),l("。")])],-1),f=e("h2",{id:"helm-与-kubectl-对比",tabindex:"-1"},[e("code",null,"helm"),l(" 与 "),e("code",null,"kubectl"),l(" 对比 "),e("a",{class:"header-anchor",href:"#helm-与-kubectl-对比","aria-label":'Permalink to "`helm` 与 `kubectl` 对比"'},"​")],-1),x=e("p",null,[e("code",null,"helm"),l(" 和 "),e("code",null,"kubectl"),l(" 都是用于 Kubernetes 管理的工具，它们有以下不同之处：")],-1),H=e("ol",null,[e("li",null,[e("strong",null,"功能不同"),l("："),e("code",null,"kubectl"),l(" 是 Kubernetes 的命令行工具，用于与 Kubernetes 集群进行交互，包括创建、管理和监控资源。"),e("code",null,"helm"),l(" 用于管理和部署复杂的应用程序，可以将多个 Kubernetes 资源打包成一个 Chart。")]),e("li",null,[e("strong",null,"抽象层次不同"),l("："),e("code",null,"kubectl"),l(" 操作的是原始的 Kubernetes 资源，需要手动编写 YAML 文件。Helm 提供了高级的抽象层，允许用户定义和管理应用程序的结构和配置，使部署更加简单。")]),e("li",null,[e("strong",null,"Charts"),l("：Helm 使用 Charts 来组织和打包应用程序资源，而 "),e("code",null,"kubectl"),l(" 操作的是单个资源。Charts 允许用户定义应用程序的依赖关系和配置选项，Kubectl 不具备这些功能。")]),e("li",null,[e("strong",null,"生态系统"),l("：Helm 有一个丰富的 Charts 生态系统，包括各种常见应用程序的 Charts。Kubectl 主要用于操作 Kubernetes 资源，不提供应用程序打包和管理功能。")])],-1),C=e("p",null,[l("综上所述，Helm 主要用于管理和部署复杂的应用程序，而 "),e("code",null,"kubectl"),l(" 主要用于与 Kubernetes 集群进行交互和操作资源。")],-1),K=e("h2",{id:"进一步阅读",tabindex:"-1"},[l("进一步阅读 "),e("a",{class:"header-anchor",href:"#进一步阅读","aria-label":'Permalink to "进一步阅读"'},"​")],-1),y=e("ul",null,[e("li",null,[e("a",{href:"https://helm.sh/docs/",target:"_blank",rel:"noreferrer"},"Helm 官方文档"),l(": Helm 的官方文档提供了详细的指南和参考，包括 Helm 的基本概念、命令用法和高级主题。")]),e("li",null,[e("a",{href:"https://circleci.com/blog/what-is-helm/",target:"_blank",rel:"noreferrer"},"What is Helm? A complete guide"),l(": 这篇文章提供了对 Helm 的全面介绍，解释了 Helm 的作用以及如何在 Kubernetes 中使用它。")]),e("li",null,[e("a",{href:"https://www.freecodecamp.org/news/what-is-a-helm-chart-tutorial-for-kubernetes-beginners/",target:"_blank",rel:"noreferrer"},"What is a Helm Chart?"),l(": 本教程解释了 Helm Chart 的概念和用途，适合 Kubernetes 初学者了解 Helm Chart 的基本原理。")]),e("li",null,[l("Helm 项目的源代码托管在 "),e("a",{href:"https://github.com/helm/helm",target:"_blank",rel:"noreferrer"},"GitHub"),l("，你可以在这里找到最新版本的 Helm 和参与社区贡献。")]),e("li",null,[l("中文资源： "),e("ul",null,[e("li",null,[e("a",{href:"https://cloud.tencent.com/developer/article/1444758",target:"_blank",rel:"noreferrer"},"腾讯云：Kubernetes 之 Helm 简介、安装、配置、使用指南")]),e("li",null,[e("a",{href:"https://zhuanlan.zhihu.com/p/350328164",target:"_blank",rel:"noreferrer"},"知乎：Helm 入门教学")])])])],-1),E=e("div",{class:"language-sh vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sh"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#79B8FF"}},"x"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"env"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"use"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"helm")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#005CC5"}},"x"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"env"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"use"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"helm")])])])],-1);function v(P,w,F,B,A,M){const n=a("PackagePage");return s(),o("div",null,[h(n,null,{default:t(()=>[m,i]),abstract:t(()=>[u,d,p,b,_,g,k,f,x,H,C,K,y]),install:t(()=>[E]),_:1})])}const $=r(c,[["render",v]]);export{N as __pageData,$ as default};
