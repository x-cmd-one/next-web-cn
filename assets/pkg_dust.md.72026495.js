import{_ as l,C as n,o,c as d,H as i,w as s,k as e,a as t}from"./chunks/framework.98e11516.js";const R=JSON.parse('{"title":"dust","titleTemplate":"x-cmd package | `du` 命令的现代化替代品， 用于查看磁盘空间使用情况","description":"x-cmd package dust | `du` 命令的现代化替代品， 用于查看磁盘空间使用情况","frontmatter":{"name":"dust","titleTemplate":"x-cmd package | `du` 命令的现代化替代品， 用于查看磁盘空间使用情况","head":[["meta",{"name":"og:title","content":"dust | x-cmd package"}],["meta",{"name":"og:description","content":"`du` 命令的现代化替代品， 用于查看磁盘空间使用情况"}],["meta",{"name":"description","content":"x-cmd package dust | `du` 命令的现代化替代品， 用于查看磁盘空间使用情况"}]],"links":[{"type":"1min","text":"dust","link":"/1min/dust"},{"type":"mod","text":"`x env` => 文档","link":"/mod/env"}],"homepage":"https://github.com/bootandy/dust","license":"MIT","version":{"stable":"v0.0.1"},"support":["linux/arm64","darwin/arm64","linux/x64","darwin/x64","win/x64"],"source":{"repack-official":["https://github.com/x-cmd-build/dust/releases","https://gitcode.net/x-cmd-build/dust/-/releases"]},"aside":false,"outline":false,"x-term-speg":"pkg/dust.cn","x-term-name":"dust","x-term-desc":"`du` 命令的现代化替代品， 用于查看磁盘空间使用情况","x-term-size":"large"},"headers":[],"relativePath":"pkg/dust.md","filePath":"pkg/dust.md"}'),r={name:"pkg/dust.md"},c=e("h1",{id:"dust",tabindex:"-1"},[t("dust "),e("a",{class:"header-anchor",href:"#dust","aria-label":'Permalink to "dust"'},"​")],-1),u=e("p",{class:"x-desc"},[e("code",null,"du"),t(" 命令的现代化替代品， 用于查看磁盘空间使用情况")],-1),h=e("h2",{id:"简介",tabindex:"-1"},[t("简介 "),e("a",{class:"header-anchor",href:"#简介","aria-label":'Permalink to "简介"'},"​")],-1),p=e("p",null,'Dust 是一个用于分析磁盘空间使用情况的命令行工具，旨在提供直观的磁盘分布信息，它的名字是由 "du" 和 Rust 编程语言组合而来。',-1),m=e("p",null,"Dust 的主要功能是提供实时的磁盘空间概览，并以直观的图形方式展示文件和目录的大小，使用户能够迅速了解磁盘的使用情况。",-1),_=e("h2",{id:"用户首次快速实验指南",tabindex:"-1"},[t("用户首次快速实验指南 "),e("a",{class:"header-anchor",href:"#用户首次快速实验指南","aria-label":'Permalink to "用户首次快速实验指南"'},"​")],-1),x=e("p",null,"对于首次使用 Dust 的用户，可以参考下面的链接，快速体验 Dust 的基本用法。",-1),g=e("ul",null,[e("li",null,[t("x-cmd 提供了 "),e("a",{href:"/1min/dust"},"Dust 1分钟教程"),t("，帮助您快速入门。")])],-1),f=e("h2",{id:"技术特点",tabindex:"-1"},[t("技术特点 "),e("a",{class:"header-anchor",href:"#技术特点","aria-label":'Permalink to "技术特点"'},"​")],-1),k=e("ol",null,[e("li",null,"直观的界面：Dust以树状结构和 ASCII 条形的形式显示磁盘空间使用情况。并使用不同色彩区分较大文件。让用户快速了解磁盘空间占用最多的目录。"),e("li",null,"智能递归：Dust会自动递归遍历文件系统树，找到最大的子目录或文件，而无需手动添加-d或-h标志。"),e("li",null,"定制化选项：用户可以通过命令选项来自定义输出，例如排除特定目录、显示完整路径、调整显示级别等。"),e("li",null,"Rust编写：Rust为Dust提供了安全性、跨平台性和出色的性能。")],-1),b=e("h2",{id:"竞品和相关作品",tabindex:"-1"},[t("竞品和相关作品 "),e("a",{class:"header-anchor",href:"#竞品和相关作品","aria-label":'Permalink to "竞品和相关作品"'},"​")],-1),y=e("ol",null,[e("li",null,[e("a",{href:"/pkg/duf"},"duf"),t(": duf 是x-cmd推荐的另一款磁盘分析工具，它可以直观的显示系统挂载磁盘的使用情况，但是没有文件占比情况。建议duf 与dust结合使用，可以快速分析系统磁盘及文件占比情况。")]),e("li",null,"du: Linux的标准命令，用于查看文件和目录的磁盘使用情况。但du命令会将当前目录的所有子目录都输出到终端，不利于快速分析。"),e("li",null,"df: 另一个常见的磁盘管理命令，用于显示文件系统的可用空间。通常与du搭配使用。")],-1),E=e("h2",{id:"进一步探索",tabindex:"-1"},[t("进一步探索 "),e("a",{class:"header-anchor",href:"#进一步探索","aria-label":'Permalink to "进一步探索"'},"​")],-1),v=e("ul",null,[e("li",null,[t("如果您想深入了解 Dust，可以查阅"),e("a",{href:"https://github.com/bootandy/dust",target:"_blank",rel:"noreferrer"},"官方文档"),t("。")]),e("li",null,[e("a",{href:"https://www.linode.com/docs/guides/dust-command-on-linux-installation/",target:"_blank",rel:"noreferrer"},"Installing and Using dust on Linux")]),e("li",null,[e("a",{href:"https://opensource.com/article/21/6/dust-linux",target:"_blank",rel:"noreferrer"},"Replace du with dust on Linux")]),e("li",null,[e("a",{href:"https://unixcop.com/dust-command-in-linux",target:"_blank",rel:"noreferrer"},"dust command in Linux")])],-1),P=e("div",{class:"language-sh vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sh"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#79B8FF"}},"x"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"env"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"use"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"dust")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#005CC5"}},"x"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"env"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"use"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"dust")])])])],-1);function C(F,D,w,B,I,L){const a=n("PackagePage");return o(),d("div",null,[i(a,null,{default:s(()=>[c,u]),abstract:s(()=>[h,p,m,_,x,g,f,k,b,y,E,v]),install:s(()=>[P]),_:1})])}const T=l(r,[["render",C]]);export{R as __pageData,T as default};
