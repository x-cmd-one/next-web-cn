import{_ as s,C as a,o as n,c as i,H as r,w as o,k as t,a as e}from"./chunks/framework.98e11516.js";const L=JSON.parse('{"title":"mosquitto","titleTemplate":"x-cmd package | 实现 MQTT 协议的消息代理","description":"x-cmd package mosquitto | 实现 MQTT 协议的消息代理","frontmatter":{"name":"mosquitto","titleTemplate":"x-cmd package | 实现 MQTT 协议的消息代理","head":[["meta",{"name":"og:title","content":"mosquitto | x-cmd package"}],["meta",{"name":"og:description","content":"实现 MQTT 协议的消息代理"}],["meta",{"name":"description","content":"x-cmd package mosquitto | 实现 MQTT 协议的消息代理"}]],"links":[{"type":"1min","text":"mosquitto","link":"/1min/mosquitto"},{"type":"mod","text":"`x env` => 文档","link":"/mod/env"}],"homepage":"https://mosquitto.org/","license":"MIT","version":{"stable":"v0.0.1"},"support":["linux/arm64","darwin/arm64","linux/x64","darwin/x64","win/x64"],"source":{"repack-official":["https://github.com/x-cmd-build/mosquitto/releases","https://gitcode.net/x-cmd-build/mosquitto/-/releases"]},"aside":false,"outline":false,"x-term-speg":"pkg/mosquitto.cn","x-term-name":"mosquitto","x-term-desc":"实现 MQTT 协议的消息代理","x-term-size":"large"},"headers":[],"relativePath":"pkg/mosquitto.md","filePath":"pkg/mosquitto.md"}'),c={name:"pkg/mosquitto.md"},u=t("h1",{id:"mosquitto",tabindex:"-1"},[e("mosquitto "),t("a",{class:"header-anchor",href:"#mosquitto","aria-label":'Permalink to "mosquitto"'},"​")],-1),m=t("p",{class:"x-desc"},"实现 MQTT 协议的消息代理",-1),d=t("h2",{id:"简介",tabindex:"-1"},[e("简介 "),t("a",{class:"header-anchor",href:"#简介","aria-label":'Permalink to "简介"'},"​")],-1),h=t("p",null,[t("code",null,"mosquitto"),e(" 是一个开源的 MQTT 消息代理，它旨在支持 IoT（物联网）和分布式应用程序的消息传输。这个项目最初由 Eclipse 开发，并且现在由社区继续维护和发展。Mosquitto 的设计理念是提供一个高性能、轻量级和可扩展的消息代理，以支持可靠的消息传递。")],-1),p=t("h2",{id:"基本功能",tabindex:"-1"},[e("基本功能 "),t("a",{class:"header-anchor",href:"#基本功能","aria-label":'Permalink to "基本功能"'},"​")],-1),_=t("p",null,"目前，Mosquitto 提供了以下基本功能：",-1),T=t("ul",null,[t("li",null,[e("六个子命令： "),t("code",null,"mosquitto"),e(" 提供了一组子命令，包括 mosquitto、mosquitto_sub、mosquitto_pub、mosquitto_ctrl、mosquitto_rr 和 mosquitto_passwd，用于启动代理、订阅主题、发布消息、初始化代理实例、发布请求消息并等待响应，以及管理密码文件。")]),t("li",null,[e("公共测试服务器： "),t("code",null,"mosquitto"),e(" 提供了一个公共测试服务器 test.mosquitto.org，用于测试和验证 MQTT 消息传递。")])],-1),g=t("h2",{id:"首次用户",tabindex:"-1"},[e("首次用户 "),t("a",{class:"header-anchor",href:"#首次用户","aria-label":'Permalink to "首次用户"'},"​")],-1),q=t("ol",null,[t("li",null,"本文提供了一个 demo，介绍如何使用 mosquitto 订阅主题，并通过该主题发送消息。"),t("li",null,[e("x-cmd也提供了"),t("a",{href:"/1min/mosquitto"},"1分钟教程"),e("可以帮你快速入门。")])],-1),k=t("h2",{id:"技术特点",tabindex:"-1"},[e("技术特点 "),t("a",{class:"header-anchor",href:"#技术特点","aria-label":'Permalink to "技术特点"'},"​")],-1),b=t("p",null,[t("code",null,"mosquitto"),e(" 作为一个 MQTT 代理（Broker）具有许多技术特点，使其成为物联网（IoT）和分布式应用程序中的可靠消息传输解决方案。以下是 "),t("code",null,"mosquitto"),e(" 的一些主要技术特点：")],-1),f=t("ol",null,[t("li",null,[t("strong",null,"MQTT 协议支持："),e(" 实现了 MQTT 协议的多个版本，包括 MQTT 5.0、3.1.1 和 3.1。这意味着它能够与各种 MQTT 客户端和设备进行通信，支持多种 MQTT 版本的特性和协议规范。")]),t("li",null,[t("strong",null,"跨平台性："),e(" 具有高度的跨平台性，可以运行在多个操作系统上，包括 Linux、Windows、macOS 和各种嵌入式系统。这使得开发者能够在不同的硬件和操作系统上部署 "),t("code",null,"mosquitto"),e(" 代理。")]),t("li",null,[t("strong",null,"安全性："),e(" 提供多层次的安全功能，包括基于用户名和密码的身份验证、SSL/TLS 加密以及访问控制列表（ACL）。这些功能确保 MQTT 消息在传输过程中的机密性和完整性。")]),t("li",null,[t("strong",null,"QoS 支持："),e(" 支持 MQTT 的三个不同的服务质量级别（QoS 0、QoS 1 和 QoS 2）。这意味着可以根据不同应用程序的需求进行消息传递，从不丢失消息到至少一次传递和恰好一次传递。")]),t("li",null,[t("strong",null,"持久性消息："),e(" 具备持久性消息存储功能，这意味着即使客户端离线，它仍然可以接收和分发消息。这对于确保消息不会丢失并且在客户端重新连接后可用非常重要。")]),t("li",null,[t("strong",null,"WebSockets 支持："),e(" 支持 MQTT over WebSockets，使浏览器和移动应用程序能够通过 WebSockets 连接到 "),t("code",null,"mosquitto"),e(" 服务器。这增加了 MQTT 在 Web 应用程序中的可用性。")]),t("li",null,[t("strong",null,"集群支持："),e(" 具备集群功能，可以通过配置多个 "),t("code",null,"mosquitto"),e(" 服务器来实现负载均衡和高可用性。这确保了系统的稳定性和可扩展性。")]),t("li",null,[t("strong",null,"插件系统："),e(" 支持插件系统，允许开发者编写自定义插件以扩展其功能。这使得可以根据项目需求添加特定功能。")])],-1),x=t("p",null,"总的来说，Mosquitto 的技术特点包括对 MQTT 协议的多版本支持、跨平台性、安全性、QoS 支持、持久性消息、WebSockets 支持、集群支持和插件系统。这些特点使其成为一个强大而灵活的 MQTT 代理，适用于各种 IoT 和分布式应用程序。",-1),Q=t("h2",{id:"相关作品",tabindex:"-1"},[e("相关作品 "),t("a",{class:"header-anchor",href:"#相关作品","aria-label":'Permalink to "相关作品"'},"​")],-1),M=t("ul",null,[t("li",null,[t("a",{href:"https://eclipse.dev/paho/",target:"_blank",rel:"noreferrer"},"Paho"),e("：提供多种语言的 MQTT 客户端库实现。")]),t("li",null,[t("a",{href:"https://projects.eclipse.org/projects/iot.streamsheets",target:"_blank",rel:"noreferrer"},"streamsheets"),e("：是一个易于使用的基于 Web 的实时电子表格界面，可用于处理来自各种来源的传入数据，例如 MQTT，OPC-UA 和 REST。")])],-1),E=t("h2",{id:"进一步阅读",tabindex:"-1"},[e("进一步阅读 "),t("a",{class:"header-anchor",href:"#进一步阅读","aria-label":'Permalink to "进一步阅读"'},"​")],-1),y=t("ul",null,[t("li",null,[e("项目所托管的网站 "),t("a",{href:"https://github.com/eclipse/mosquitto",target:"_blank",rel:"noreferrer"},"github"),e(" 提供了详细的使用说明")]),t("li",null,[t("a",{href:"https://mosquitto.org/",target:"_blank",rel:"noreferrer"},"官方文档")]),t("li",null,[t("a",{href:"http://www.steves-internet-guide.com/mossquitto-conf-file/",target:"_blank",rel:"noreferrer"},[e("Quick Guide to The "),t("code",null,"mosquitto"),e(".conf File With Examples")])]),t("li",null,[t("a",{href:"https://docs.foundries.io/73/tutorials/mosquitto.html",target:"_blank",rel:"noreferrer"},"How to Get Started with Mosquitto MQTT Broker Containers")])],-1),v=t("div",{class:"language-sh vp-adaptive-theme"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"sh"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#79B8FF"}},"x"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#9ECBFF"}},"env"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#9ECBFF"}},"use"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#9ECBFF"}},"mosquitto")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#005CC5"}},"x"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#032F62"}},"env"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#032F62"}},"use"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#032F62"}},"mosquitto")])])])],-1);function S(P,C,w,F,B,W){const l=a("PackagePage");return n(),i("div",null,[r(l,null,{default:o(()=>[u,m]),abstract:o(()=>[d,h,p,_,T,g,q,k,b,f,x,Q,M,E,y]),install:o(()=>[v]),_:1})])}const N=s(c,[["render",S]]);export{L as __pageData,N as default};
